.hidden { display: none; }
:focus {outline:none;}
::-moz-focus-inner {border:0;}

input[type='number'] {
    width: 3rem;
    text-align: center;
    font-size: 2rem;
    display: inline-block;
    height: 3rem;
}

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

.ctrl-labelledNumber {
    position: relative;
    display: inline-block;
}
.ctrl-labelledNumber > input {
    font-size: x-large;
}
.ctrl-labelledNumber > label {
    width: 3rem;
    left: 0;
    position: absolute;
    top: 2px;
    text-align: center;
    font-size: small;
    font-weight: bold;
    padding: 0 3px;
}

/** Main Layout **/
body {
    display: table;
    width: 100%;
    font-family: sans-serif;
    margin: 10px;
}
    body > * {
        display : table-cell;
    }
    body > article {}
    body > aside {
        width: 30%;
    }

    body > aside > * {
        display: table-row;
        height: 200px;
    }
    
    body > aside > * > section {
        display: table-cell;
        padding-left: 10px;
        padding-right: 10px;
    }

.ctrl-column {
    display: inline-block;
}

.ctrl-coordinate {
    text-align: center;
}

.ctrl-coordinate > span {
    vertical-align: text-bottom;
}

/**
<div class="ctrl-tabSet">
    <input type="radio" id="tab1" />
    <label for="tab1">Tab1</label>
    <section>Tab1 Content</section>
    <input type="radio" id="tab2" />
    <label for="tab2">Tab2</label>
    <section>Tab2 Content</section>
</div class="ctrl-tabSet">
*/
.ctrl-tabSet {
    position: relative;
}

* + .ctrl-tabSet {
    margin-top: 10px;
}

    .ctrl-tabSet > label {
        display: inline-block;
        border: 1px solid black;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        text-align: center;
        height: 25px;
        width: auto;
        background-color: #BBBBBB;
        margin: 0;
        margin-left: -2px;
        margin-right: -2px;
        padding: 5px;
        padding-bottom: 1px;
        box-sizing: border-box;
    }

    .ctrl-tabSet[data-tabs='2'] > label {
        width: 50%;
    }

    .ctrl-tabSet[data-tabs='3'] > label {
        width: 33%;
    }

    .ctrl-tabSet[data-tabs='4'] > label {
        width: 25%;
    }

    .ctrl-tabSet > fieldset { border: none; }
    .ctrl-tabSet > fieldset > legend { display: none; }

    .ctrl-tabSet > input[type='radio'] { display: none; }

    .ctrl-tabSet > input[type='radio']:checked + label {
        background-color: inherit;
        font-weight: bold;
        border-bottom-width: 0;
    }

    .ctrl-tabSet > input[type='radio'].hiddenTab + label {
        display: none;
    }

    .ctrl-tabSet > input[type='radio']:not(:checked) + label + section,
    .ctrl-tabSet > input[type='radio']:not(:checked) + label + fieldset {
            display: none;
    }
    .ctrl-tabSet > section,
    .ctrl-tabSet > fieldset {
        box-sizing: border-box;
        position: absolute;
        top: 20px;
        width: 100%;
        padding: 10px 5px;
        margin: 0;
    }

.ctrl-toggle {
    width: 100px;
    margin: 3px;
}
    .ctrl-toggle input[type='checkbox'] {
        float: right;
        height: 1.4rem;
    }

    .ctrl-toggle label {
        width: 100%;
        display: block;
        height: 1rem;
        line-height: 1rem;
        padding: 3px;
        border: 2px dashed black;
        border-radius: 5px;
    }

    .ctrl-toggle input[type='checkbox']:checked + label {
        border-style: solid;
    }

.ctrl-thickButton {
    display: inline-block;
    height: 3rem;
    width: 3rem;
    line-height: 3rem;
    margin-left: 1rem;
    vertical-align: text-bottom;
}

.ctrl-flat {
    display: block;
    height: 2rem;
    width: 100%;
    margin: 1px;
    text-align: center;
}


.initiativeList {
    list-style-type: none;
    padding: 5px;
    padding-top: 10px;
    padding-left: 5px;
    height: 200px;
    overflow-y: scroll;
    background-color: bisque;
    margin-top: 0;
    margin-bottom: 0;
    width: 240px;
}

    .initiativeList > li > .mobName {
        display: inline-block;
        width: 100px;
        overflow-x: hidden;
    }
    .initiativeList > li > * {
        vertical-align: middle;
    }
    .initiativeList > li > .initiativeScore { display: none; }
    .initiativeList > li > [name='react'] { display: none; }
    .initiativeList > li > [name='position'] { display: none; }
    .initiativeList > li > [name='toggleMob'] { display: none; }

    body[data-state='setup'] .initiativeList > li {}
        body[data-state='setup'] .initiativeList > li > [name='position'] { display: inline-block; }
        body[data-state='setup'] .initiativeList > li > [name='toggleMob'] { display: inline-block; }

    body[data-state="combat"] .initiativeList > li {}
        body[data-state="combat"] .initiativeList > li.currentTurn {
            font-weight: bold;
            border: 2px solid red;
        }
        body[data-state="combat"] .initiativeList > li.currentTurn::before {
            content: ">";
            margin-left: -1rem;
            position: absolute;
            font-weight: bold;
        }

        body[data-state="combat"] .initiativeList > li > .initiativeScore { display: inline; }
        body[data-state="combat"] .initiativeList > li[data-isMyPc] > [name='toggleMob'] { display: inline-block; }

        body[data-state="combat"] .initiativeList > li[data-isMyPc]:not([data-reacted]) > [name='react'],
        body[data-state="combat"][data-isDm] .initiativeList > li[data-mobType='npc']:not([data-reacted]) > [name='react'] {
            display: inline-block;
        }
        body[data-state="combat"][data-isDm] .initiativeList > li > [name='position'] { display: inline-block; }
        body[data-state="combat"][data-isDm] .initiativeList > li > [name='toggleMob'] { display: inline-block; }


td.ctrl-combatCell {
    padding: 0;
    position: relative;
}

    td.ctrl-combatCell > .terrain {
        height: 100%;
        width: 100%;
        border-width: 0;
        background-color: inherit;
    }

    td.ctrl-combatCell > .terrain:focus,
    td.ctrl-combatCell > .terrain:active {
        background-color: rgba(0,0,0,0.2);
    }
    td.ctrl-combatCell > .terrain:hover {
        background-color: rgba(0,0,0,0.1);
    }

    td.ctrl-combatCell > button + div {
        position: absolute;
        width: 50%;
        height: 50%;
        left: 25%;
        top: 25%;
        border-color: black;
        border-style: solid;
        border-width: 1px;

        font-size: small;
    }

    td.ctrl-combatCell > .hasTurn {
        border-color: gold;
        border-width: 3px;
        border-style: groove;
        font-weight: bold;
    }

    td.ctrl-combatCell > .terrain.reachable:hover {
        background-color: rgba(0, 255, 0, 0.4);
    }

    td.ctrl-combatCell > .terrain.unreachable:hover {
        background-color: rgba(255, 0, 0, 0.4);
    }

table.ctrl-combatMap {
    table-layout: fixed;
    border: solid 1px #000;
    border-width: 0 1px 1px 0;
    border-spacing: 0;
    touch-action: pan-y;
}
    table.ctrl-combatMap th,
    table.ctrl-combatMap td {
        width:25px;
        height: 25px;
        vertical-align: middle;
        text-align: center;
        border-width: 1px 0 0 1px;
        border-color: black;
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 1.5),
    only screen and (min--moz-device-pixel-ratio: 1.5),
    only screen and (-o-device-pixel-ratio: 3/2),
    only screen and (min-device-pixel-ratio: 1.5) {
        table.ctrl-combatMap th,
        table.ctrl-combatMap td {
            width: 35px;
            height: 35px;
        }
    }

    table.ctrl-combatMap th {
        border-style: solid;

    }
    table.ctrl-combatMap th[scope='column'] {
        border-bottom-width: 0;
    }
    table.ctrl-combatMap th[scope='row'] {
        border-right-width: 0;
    }

    table.ctrl-combatMap td {
        border-style: dotted;
    }

    table.ctrl-combatMap td:first-of-type {
        border-left-style: solid;
    }

    table.ctrl-combatMap tr:nth-child(2) > td{
        border-top-style: solid;
    }

ul.ctrl-colourOption {
    padding-left: 0;
    list-style-type: none;
}

.ctrl-speedOptions {
}

    .ctrl-speedOptions > * {
        text-align: center;
    }

    .ctrl-speedOptions input[type='radio'] {
        display: none;
    }

    .ctrl-speedOptions label {
        display: inline-block;
        width: 3rem;
        height: 3rem;
        line-height: 0;
        border: 2px outset black;
    }

        .ctrl-speedOptions label h6,
        .ctrl-speedOptions label span {
            display: block;
        }

        .ctrl-speedOptions label h6 {
            line-height: 1rem;
            margin: 0;
        }

        .ctrl-speedOptions label span {
            line-height: 30px;
            margin-bottom: 1rem;
            font-size: xx-large;
        }

    .ctrl-speedOptions input[type='radio']:checked + label {
        border-width: 2px;
        border-style: inset;
    }


.ctrl-colourOption > input[type='radio'] {
    display: none;
}

    .ctrl-colourOption > label {
        display: inline-block;
    }

    .ctrl-colourOption > label:first-child {
        vertical-align: top;
        line-height: 50px;
    }

    .ctrl-colourOption > input + label {
        width: 50px;
        height: 50px;
        border: 1px solid black;
    }

        .ctrl-colourOption > input:checked + label {
            border: 3px  solid gray;
        }

        .ctrl-colourOption > input[value='FF0000'] + label { 
            background-color: #FF0000;
        }
        .ctrl-colourOption > input[value='00FF00'] + label { 
            background-color: #00FF00;
        }
        .ctrl-colourOption > input[value='0000FF'] + label { 
            background-color: #0000FF;
        }
        .ctrl-colourOption > input[value='000000'] + label {  
            background-color: #000000;
        }
        .ctrl-colourOption > input[value='00FFFF'] + label {  
            background-color: #00FFFF;
        }
        .ctrl-colourOption > input[value='FF00FF'] + label { 
            background-color: #FF00FF;
        }
        .ctrl-colourOption > input[value='FFFF00'] + label {  
            background-color: #FFFF00;
        }

.ctrl-modal > div {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255,255,255,0.4);
}

.ctrl-modal > section {
    margin: 0 auto;
    width: 30%;
    position: absolute;
    top: 200px;
}

body[data-state='combat']:not([data-isMyTurn]):not([data-isDm]) #controls > * { display: none; }

#turn > .turnHeading {
    opacity: 0;
}
#turn > .turnHeading.updated {
    -webkit-transition: opacity 2s ease-in;
    -moz-transition: opacity 2s ease-in;
    -o-transition: opacity 2s ease-in;
    -ms-transition: opacity 2s ease-in;
    transition: opacity 2s ease-in;
    opacity: 1;
}

#social {
    background-color: bisque;
    margin-bottom: 10px;
    margin-left: 0;
    padding-left: 0;
}

#social > div {
    padding-top: 5px;
    text-align: center;
}

#controls {
    padding-top: 10px;
    padding: 5px;
}