/** Normalise **/

.hidden { display: none !important; }
:focus {outline: none;}
::-moz-focus-inner {border: 0;}

input[type='number'] {
    -moz-appearance: textfield;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

ul, ol {
    list-style-type: none;
    padding-left: 0;
}

label {
    cursor: pointer;
}

button {
    background-color: inherit;
    border: none;
    padding: 0;
    cursor: pointer;
}

    button:disabled {
        cursor: default;
    }


/** General Controls **/

.form .ctrl-thickButton {
    margin-left: 0;
}

.form legend {
    margin-top: 10px;
    margin-bottom: 3px;
}

.ctrl-labelledNumber {
    position: relative;
    display: inline-block;
    background-color: inherit;
}

    .centre > .ctrl-labelledNumber {
        text-align: center;
        display: block;
        margin: 0 auto;
        width: 3.5rem;
    }
    .ctrl-labelledNumber > input,
    .ctrl-labelledNumber > .value {
        font-size: x-large;
        width: 3.5rem;
        height: 3.5rem;
        line-height: 3.5rem;
        text-align: center;
        display: inline-block;
        background-color: transparent;
        border: 2px rgb(238, 238, 238) ridge;
    }

    .ctrl-labelledNumber > label,
    .ctrl-labelledNumber > .label {
        width: 3.5rem;
        height: 100%;
        z-index: -1;
        left: 0;
        position: absolute;
        top: 2px;
        text-align: center;
        font-size: small;
        font-weight: bold;
        padding: 0 3px;
        background-color: transparent;
    }

.ctrl-radioBoxButton {}

    .ctrl-radioBoxButton > input[type='radio'] {
        display: none;
    }

    .ctrl-radioBoxButton > label {
        display: inline-block;
        width: 3.5rem;
        height: 3.5rem;
        border: 1px solid black;
        z-index: auto;
    }

    .ctrl-radioBoxButton > input:checked + label {
        border: 3px solid gray;
    }

.ctrl-radioBoxButton.ctrl-labelledNumber > .value {
    border: none;
}

.ctrl-radioBoxButton.ctrl-labelledNumber > label,
.ctrl-radioBoxButton.ctrl-labelledNumber > .label {
    box-sizing: border-box;
}

.ctrl-column {
    display: inline-block;
}
.ctrl-row {
    display: block;
}

.ctrl-coordinate {
    text-align: center;
}

.ctrl-coordinate > span {
    vertical-align: text-bottom;
}

/**
<div class="ctrl-tabSet">
    <input type="radio" id="tab1" />
    <label for="tab1">Tab1</label>
    <section>Tab1 Content</section>
    <input type="radio" id="tab2" />
    <label for="tab2">Tab2</label>
    <section>Tab2 Content</section>
</div class="ctrl-tabSet">
*/
.ctrl-tabSet {
    position: relative;
}

* + .ctrl-tabSet {
    margin-top: 10px;
}

    .ctrl-tabSet > label {
        display: inline-block;
        border: 1px solid black;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        text-align: center;
        height: 25px;
        width: auto;
        background-color: #BBBBBB;
        margin: 0;
        margin-left: -2px;
        margin-right: -2px;
        padding: 5px;
        padding-bottom: 1px;
        box-sizing: border-box;
    }

    .ctrl-tabSet[data-tabs='2'] > label {
        width: 50%;
    }

    .ctrl-tabSet[data-tabs='3'] > label {
        width: 33%;
    }

    .ctrl-tabSet[data-tabs='4'] > label {
        width: 25%;
    }

    .ctrl-tabSet > input[type='radio'] { display: none; }

    .ctrl-tabSet > input[type='radio']:checked + label {
        background-color: inherit;
        font-weight: bold;
        border-bottom-width: 0;
    }

    .ctrl-tabSet > input[type='radio'].hiddenTab + label {
        display: none;
    }

    .ctrl-tabSet > input[type='radio']:not(:checked) + label + section,
    .ctrl-tabSet > input[type='radio']:not(:checked) + label + .tabSection {
        display: none;
    }
    .ctrl-tabSet > section,
    .ctrl-tabSet > .tabSection {
        border: none;
        box-sizing: border-box;
        position: absolute;
        top: 20px;
        width: 100%;
        padding: 10px 5px;
        margin: 0;
    }

.ctrl-toggle {
    width: 100px;
    margin: 3px;
}
    .ctrl-toggle input[type='checkbox'] {
        float: right;
        height: 1.4rem;
    }

    .ctrl-toggle label {
        width: 100%;
        display: block;
        height: 1rem;
        line-height: 1rem;
        padding: 3px;
        border: 2px dashed black;
        border-radius: 5px;
    }

    .ctrl-toggle input[type='checkbox']:checked + label {
        border-style: solid;
    }

.ctrl-control {
    background-color: buttonface;
    border: 1px solid black;
    padding: 1px 6px;
    font-family: monospace;
}

.ctrl-thickButton {
    display: inline-block;
    height: 3.5rem;
    width: 3.5rem;
    line-height: 3.5rem;
    margin-top: 0.5rem;
    margin-left: 0.5rem;
    vertical-align: text-bottom;

    background-color: buttonface;
    border: 1px solid black;
}

    .ctrl-thickButton:disabled {
        color: graytext;
        border-width: 0;
    }

.ctrl-flat {
    display: block;
    height: 2rem;
    width: 100%;
    margin: 1px;
    text-align: center;
}
    button.ctrl-flat {
        background-color: buttonface;
        border: 1px solid black;
    }
    button.ctrl-flat:disabled {
        color: graytext;
        border-width: 0;
    }

.ctrl-textBox {
    display: block;
    height: 2rem;
    width: 300px;
    margin: 1px;
    text-align: center;
}

.ctrl-modal {
    position: fixed;
    display: block;
    top: 200px;

    border: black 2px solid;
    background-color: white;
    padding: 10px;

    -webkit-transition: opacity 2s ease-in, visibility 2s step-end;
    -moz-transition: opacity 2s ease-in, visibility 2s step-end;
    -o-transition: opacity 2s ease-in, visibility 2s step-end;
    -ms-transition: opacity 2s ease-in, visibility 2s step-end;
    transition: opacity 2s ease-in, visibility 2s step-end;
    opacity: 0;
    visibility: hidden;
}

    .ctrl-modal.active {
        -webkit-transition: opacity 0.5s ease-in;
        -moz-transition: opacity 0.5s ease-in;
        -o-transition: opacity 0.5s ease-in;
        -ms-transition: opacity 0.5s ease-in;
        transition: opacity 0.5s ease-in;
        opacity: 1;
        visibility: visible;
    }

/** Main Layout **/
body {
    display: table;
    width: 100%;
    font-family: sans-serif;
    margin: 10px;
}
    body > * {
        display : table-cell;
    }
    body > article {}
    body > aside:first-child {
        width: 30%;
    }

    body > aside:first-child > * {
        display: table-row;
        height: 200px;
    }
    
    body > aside:first-child > * > section {
        display: table-cell;
        padding-left: 10px;
        padding-right: 10px;
    }

/** Application Specific **/

.initiativeList {
    list-style-type: none;
    padding: 5px;
    padding-top: 10px;
    padding-left: 5px;
    height: 200px;
    overflow-y: scroll;
    background-color: bisque;
    margin-top: 0;
    margin-bottom: 0;
    width: 241px;
}

    .initiativeList > li > .mobName {
        display: inline-block;
        width: 100px;
        overflow-x: hidden;
    }
    .initiativeList > li > * {
        vertical-align: middle;
    }
    .initiativeList > li > .initiativeScore,
    .initiativeList > li > [name='react'],
    .initiativeList > li > [name='position'],
    .initiativeList > li > [name='toggleMob'],
    .initiativeList > li > [name='setTurn'] { display: none; }

    body[data-state='setup'] [name='updateMap'] {
        display: none;
    }

    body[data-state='setup'] .initiativeList > li {}
        body[data-state='setup'] .initiativeList > li > [name='position'],
        body[data-state='setup'] .initiativeList > li > [name='toggleMob'] { display: inline-block; }

    body[data-state="combat"] .initiativeList > li {}
        body[data-state="combat"] .initiativeList > li.currentTurn {
            font-weight: bold;
            border: 2px solid red;
        }

        body[data-state="combat"] .initiativeList > li > .initiativeScore { display: inline; }
        /** TODO Implement toggling for players and re-enable
        body[data-state="combat"] .initiativeList > li[data-isMyPc] > [name='toggleMob'] { display: inline-block; }
         */

        body[data-state="combat"] .initiativeList > li[data-isMyPc]:not([data-reacted]) > [name='react'],
        body[data-state="combat"][data-isDm] .initiativeList > li[data-mobType='npc']:not([data-reacted]) > [name='react'] {
            display: inline-block;
        }
        body[data-state="combat"][data-isDm] .initiativeList > li > [name='position'],
        body[data-state="combat"][data-isDm] .initiativeList > li > [name='toggleMob'],
        body[data-state="combat"][data-isDm] .initiativeList > li:not(.currentTurn) > [name='setTurn'] { display: inline-block; }

    body[data-state='combat']:not([data-isMyTurn]):not([data-isDm]) #controls > * { display: none; }


.ctrl-combatCell {
    padding: 0;
    position: relative;
}

    .ctrl-combatCell > .terrain {
        height: 100%;
        width: 100%;
        border-width: 0;
        background-color: inherit;
    }

    .ctrl-combatCell > .terrain:focus,
    .ctrl-combatCell > .terrain:active {
        background-color: rgba(0,0,0,0.2);
    }
    .ctrl-combatCell > .terrain:hover {
        background-color: rgba(0,0,0,0.1);
    }

    .ctrl-combatCell > .mob {
        position: absolute;
        border-color: black;
        border-style: solid;
        border-width: 1px;
        width: 50%;
        height: 50%;
        font-size: small;
    }

        /* Mobs after the first are partially transparent so you can see the bottom. */
        .ctrl-combatCell > .mob ~.mob {
            opacity: 0.6;
        }

        /* First Mob on the tile. */
        .ctrl-combatCell > .mob {
            left: 25%;
            top: 25%;
        }

        /* Second mob on the tile. */
        .ctrl-combatCell > .mob + .mob {
            left: 0;
            top: 0;
        }

        /** etc **/
        .ctrl-combatCell > .mob + .mob +.mob {
            left: 50%;
            top: 50%;
        }

        /* Status Conditions */
        .ctrl-combatCell > .mob.down {
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
            transform: rotate(90deg);
        }

    .ctrl-combatCell > .hasTurn {
        font-weight: bold;
    }
    .ctrl-combatCell > .hasTurn::before {
        position: absolute;
        left: -10px;
        content: ">";
    }

    .ctrl-combatCell > .isMyPc {
        border-color: gold;
        border-width: 3px;
        border-style: groove;
    }

    .ctrl-combatCell > .terrain.reachable:hover {
        background-color: rgba(0, 255, 0, 0.4) !important;
    }

    .ctrl-combatCell > .terrain.unreachable:hover {
        background-color: rgba(255, 0, 0, 0.4) !important;
    }

.ctrl-combatMap {
    table-layout: fixed;
    border: solid 1px #000;
    border-width: 0 1px 1px 0;
    border-spacing: 0;
    touch-action: pan-y pan-x;
}
    .ctrl-combatMap th,
    .ctrl-combatMap td {
        width:25px;
        height: 25px;
        vertical-align: middle;
        text-align: center;
        border-width: 1px 0 0 1px;
        border-color: black;
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 1.5),
    only screen and (min--moz-device-pixel-ratio: 1.5),
    only screen and (-o-device-pixel-ratio: 3/2),
    only screen and (min-device-pixel-ratio: 1.5) {
        .ctrl-combatMap th,
        .ctrl-combatMap td {
            width: 35px;
            height: 35px;
        }
    }

    .ctrl-combatMap th {
        border-style: solid;
    }
    .ctrl-combatMap th[scope='column'] {
        border-bottom-width: 0;
    }
    .ctrl-combatMap th[scope='row'] {
        border-right-width: 0;
    }

    .ctrl-combatMap td {
        border-style: dotted;
    }

    .ctrl-combatMap td:first-of-type {
        border-left-style: solid;
    }

    .ctrl-combatMap tr:nth-child(2) > td{
        border-top-style: solid;
    }

#turn > .turnHeading {
    opacity: 0;
}

#turn > .turnHeading.updated {
    -webkit-transition: opacity 2s ease-in;
    -moz-transition: opacity 2s ease-in;
    -o-transition: opacity 2s ease-in;
    -ms-transition: opacity 2s ease-in;
    transition: opacity 2s ease-in;
    opacity: 1;
}

#social {
    background-color: bisque;
    margin-bottom: 10px;
    margin-left: 0;
    padding-left: 0;
}

#social > .heading {
    padding-top: 5px;
    text-align: center;
}

#controls {
    padding-top: 10px;
    padding: 5px;
}

.colour.red { background-color: #FF0000; }
.colour.green { background-color: #00FF00; }
.colour.blue { background-color: #0000FF; }
.colour.black { background-color: #000000; }
.colour.cyan { background-color: #00FFFF; }
.colour.magenta { background-color: #FF00FF; }
.colour.yellow { background-color: #FFFF00; }